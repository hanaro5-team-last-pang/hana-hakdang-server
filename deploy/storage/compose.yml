name: storages

volumes:
  broker_data:
  cache_data:

services:
  reverse-proxy:
    image: traefik:v3.3.1
    environment:
      - TZ=Asia/Seoul
    command:
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=false'
      - '--entryPoints.cache.address=:6379'
      - '--entryPoints.broker.address=:9092'
      - '--accesslog=true'
      - '--accesslog.filepath=/logs/access.log'
      - '--accesslog.bufferingsize=100'
    ports:
      - "9092:9092"
      - "6379:6379"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  broker:
    image: apache/kafka:3.9.0
    container_name: kafka_broker
    volumes:
      - broker_data:/data
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.kafka.rule=HostSNI(`*`)
      - traefik.tcp.routers.kafka.entryPoints=broker
      - traefik.tcp.routers.kafka.service=kafka_broker
      - traefik.tcp.services.kafka_broker.loadbalancer.server.port=9092
  cache:
    image: redis:7.4.1-alpine3.20
    container_name: redis_cache
    volumes:
      - cache_data:/data
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.redis.rule=HostSNI(`*`)
      - traefik.tcp.routers.redis.entryPoints=cache
      - traefik.tcp.routers.redis.service=redis_cache
      - traefik.tcp.services.redis_cache.loadbalancer.server.port=6379
