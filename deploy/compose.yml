name: back-end

volumes:
  rdb-data:

services:
  reverse-proxy:
    image: traefik:v3.3.1
    environment:
      - TZ=Asia/Seoul
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--accesslog=true'
      - '--accesslog.filepath=/logs/access.log'
      - '--accesslog.bufferingsize=100'
      - '--entryPoints.web.address=:80'
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  api-server:
    build:
      context: ..
      labels:
        - traefik.enable=true
        - traefik.http.routers.web.rule=Host(`localhost`)
        - traefik.http.services.web.loadbalancer.server.port=8080
    depends_on:
      - rdb
  rdb:
    image: postgres:17.2-alpine3.21
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - rdb-data:/var/lib/postgresql
    labels:
      - traefik.enable=false